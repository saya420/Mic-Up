local OnOffKey = "G"
local ToggleKey = "M"
local RefreshKey = "R"

local Player = game:GetService("Players").LocalPlayer
local SelectedPlayer
local Toggle, OnOff, ScriptActive = false, true, true

local Functions = {}

Functions.CopyAnimations = function(target)
    local humanoid = Player.Character:WaitForChild("Humanoid")
    
    for _, v in pairs(humanoid:GetPlayingAnimationTracks()) do
        v:Stop()
    end
    
    for _, v in pairs(target.Character.Humanoid:GetPlayingAnimationTracks()) do
        local Animation = humanoid:LoadAnimation(v.Animation)
        Animation:Play()
        Animation:AdjustWeight(9e9)
        Animation:AdjustSpeed(v.Speed)
        Animation.TimePosition = v.TimePosition
        
        spawn(function()
            v.Stopped:Wait()
            Animation:Stop()
            Animation:Destroy()
        end)
    end
end

Functions.FindClosestPlayer = function()
    local PlayerDistance = math.huge
    local ClosestPlayer

    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        if v ~= Player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            local Distance = (v.Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).magnitude
            if Distance < PlayerDistance then
                PlayerDistance = Distance
                ClosestPlayer = v
            end
        end
    end

    SelectedPlayer = ClosestPlayer
end

game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if ScriptActive and not gameProcessed then
        if input.KeyCode == Enum.KeyCode[ToggleKey] and OnOff then
            Toggle = not Toggle
            print("Toggle: ", Toggle)

            if Toggle then
                Functions.FindClosestPlayer()
                print("Selected Player: ", SelectedPlayer)
            else
                for _, v in pairs(Player.Character:WaitForChild("Humanoid"):GetPlayingAnimationTracks()) do
                    v:Stop()
                end
            end
        elseif input.KeyCode == Enum.KeyCode[OnOffKey] then
            OnOff = not OnOff
            Toggle = false
            print("OnOff: ", OnOff)
        elseif input.KeyCode == Enum.KeyCode[RefreshKey] and OnOff then
            local OldCFrame = Player.Character:WaitForChild("HumanoidRootPart").CFrame
            Player.Character.Humanoid.Health = 0
            Player.CharacterAdded:Wait():WaitForChild("HumanoidRootPart").CFrame = OldCFrame
        end
    end
end)

while true do
    task.wait()
    
    if Toggle and SelectedPlayer then
        Functions.CopyAnimations(SelectedPlayer)
    end
end
